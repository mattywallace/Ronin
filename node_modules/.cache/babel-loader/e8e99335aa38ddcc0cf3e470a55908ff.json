{"ast":null,"code":"var _jsxFileName = \"/Users/matthewwallace/cymatics/ronin-react/src/EnrollmentContainer/index.js\";\nimport React from 'react';\nimport EnrollmentList from '../EnrollmentList';\nexport default function EnrollmentContainer(props) {\n  // deleteEnrollment = async (idOfEnrollmentToDelete) => {\n  // \tconsole.log('delete enrollment');\n  // \tconst url = process.env.REACT_APP_API_URL + \"/api/v1/enrollments/\" + idOfEnrollmentToDelete\n  // \ttry {\n  // \t\tconst deleteEnrollmentResponse = await fetch(url, {\n  // \t\t\tcredentials: \"include\",\n  // \t\t\tmethod: \"DELETE\"\n  // \t\t})\n  // \t\tconsole.log(\"deleteEnrollmentResponse\", deleteEnrollmentResponse);\n  // \t\tconst deleteEnrollmentJson = await deleteEnrollmentResponse.json()\n  // \t\tconsole.log(\"deleteEnrollmentJson\", deleteEnrollmentJson);\n  // \t\tif (deleteEnrollmentResponse.status === 200) {\n  // \t\t\tthis.setState({\n  // \t\t\tcourses: this.props.enrollments.filter(enrollment => enrollment.id !== idOfEnrollmentToDelete)\n  // \t\t\t})\n  // \t\t}\t\n  // \t} catch (error) {\n  // \t\tconsole.error('Error deleting enrollment');\n  // \t\tconsole.error(error)\n  // \t}\n  // }\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, \"User Enrollments\"), /*#__PURE__*/React.createElement(EnrollmentList // deleteEnrollment={this.deleteEnrollment}\n  , {\n    enrollments: props.enrollments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/matthewwallace/cymatics/ronin-react/src/EnrollmentContainer/index.js"],"names":["React","EnrollmentList","EnrollmentContainer","props","enrollments"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAKA,eAAe,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAUlD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGC,sBACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,eAEC,oBAAC,cAAD,CACC;AADD;AAEC,IAAA,WAAW,EAAEA,KAAK,CAACC,WAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD;AAYA","sourcesContent":["import React from 'react'\nimport EnrollmentList from '../EnrollmentList'\n\n\n\n\nexport default function EnrollmentContainer(props) {\n\n\t\n\t\t\t\t\n\t\t\n\t\n\t\n\n\t\n\n\t// deleteEnrollment = async (idOfEnrollmentToDelete) => {\n\t// \tconsole.log('delete enrollment');\n\t// \tconst url = process.env.REACT_APP_API_URL + \"/api/v1/enrollments/\" + idOfEnrollmentToDelete\n\t// \ttry {\n\t// \t\tconst deleteEnrollmentResponse = await fetch(url, {\n\t// \t\t\tcredentials: \"include\",\n\t// \t\t\tmethod: \"DELETE\"\n\t// \t\t})\n\t// \t\tconsole.log(\"deleteEnrollmentResponse\", deleteEnrollmentResponse);\n\t// \t\tconst deleteEnrollmentJson = await deleteEnrollmentResponse.json()\n\t// \t\tconsole.log(\"deleteEnrollmentJson\", deleteEnrollmentJson);\n\t// \t\tif (deleteEnrollmentResponse.status === 200) {\n\t// \t\t\tthis.setState({\n\t// \t\t\tcourses: this.props.enrollments.filter(enrollment => enrollment.id !== idOfEnrollmentToDelete)\n\t// \t\t\t})\n\t// \t\t}\t\n\t// \t} catch (error) {\n\t// \t\tconsole.error('Error deleting enrollment');\n\t// \t\tconsole.error(error)\n\t// \t}\n\t// }\n\t\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<h1>User Enrollments</h1>\n\t\t\t\t<EnrollmentList \n\t\t\t\t\t// deleteEnrollment={this.deleteEnrollment}\n\t\t\t\t\tenrollments={props.enrollments} \n\t\t\t\t/>\n\t\t\t\t\n\n\t\t\t</React.Fragment>\n\n\t\t)\n\t}\n\n\n"]},"metadata":{},"sourceType":"module"}