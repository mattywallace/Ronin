{"ast":null,"code":"var _jsxFileName = \"/Users/matthewwallace/cymatics/ronin-react/ronin-app/src/EnrollmentContainer/index.js\";\nimport React, { Component } from 'react';\nexport default class EnrollmentContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getEnrollments = async () => {\n      try {\n        const url = process.env.REACT_APP_API_URL + \"api/v1/enrollments/\";\n        const enrollmentsResponse = await fetch(url, {\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const enrollmentsJson = await enrollmentsResponse.json();\n        console.log('this is enrollmentsJson', enrollmentsJson);\n        console.log('this is enrollmentsResponse', enrollmentsResponse);\n        this.setState({\n          enrollments: enrollmentsJson.data\n        });\n      } catch (error) {\n        console.log('Error getting enorllments data');\n      }\n    };\n\n    this.createEnrollment = async courseId => {\n      console.log('Props from APP');\n      console.log();\n      console.log(this.props.userInfo);\n\n      try {\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/enrollments/\" + courseId + this.props.userInfo.loggedInUserId;\n        const createdEnrollmentResponse = await fetch(url, {\n          method: 'POST',\n          credentials: 'inculde',\n          body: JSON.stringify(courseId),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('createdEnrollmentResponse', createdEnrollmentResponse);\n        const createdEnrollmentJson = createdEnrollmentResponse.json();\n        console.log(\"here is what we get when we try to enroll in a course\");\n        console.log(createdEnrollmentJson);\n\n        if (createdEnrollmentResponse.status === 201) {\n          this.setState({\n            enrollments: [...this.state.enrollments, createdEnrollmentJson.data]\n          });\n        }\n      } catch (error) {\n        console.error('error enrolling in course');\n        console.error(error);\n      }\n    };\n\n    this.state = {\n      enrollments: []\n    };\n  }\n\n  componentDidMount() {\n    this.getEnrollments();\n  }\n\n  render() {\n    console.log('here is the state in the enrollment container');\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }\n    }, \" Enrollment Container\"), /*#__PURE__*/React.createElement(EnrollmentContainer, {\n      createEnrollment: this.createEnrollment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/matthewwallace/cymatics/ronin-react/ronin-app/src/EnrollmentContainer/index.js"],"names":["React","Component","EnrollmentContainer","constructor","props","getEnrollments","url","process","env","REACT_APP_API_URL","enrollmentsResponse","fetch","credentials","headers","enrollmentsJson","json","console","log","setState","enrollments","data","error","createEnrollment","courseId","userInfo","loggedInUserId","createdEnrollmentResponse","method","body","JSON","stringify","createdEnrollmentJson","status","state","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\n\n\nexport default class EnrollmentContainer extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tenrollments: []\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getEnrollments()\n\t}\n\n\tgetEnrollments = async () => {\n\t\ttry {\n\t\t\tconst url = process.env.REACT_APP_API_URL +\"api/v1/enrollments/\"\n\t\t\tconst enrollmentsResponse = await fetch(url, {\n\t\t\t\tcredentials:'include',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t})\n\t\t\tconst enrollmentsJson = await enrollmentsResponse.json()\n\t\t\tconsole.log('this is enrollmentsJson', enrollmentsJson);\n\t\t\tconsole.log('this is enrollmentsResponse', enrollmentsResponse);\n\t\t\tthis.setState({\n\t\t\t\tenrollments: enrollmentsJson.data\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tconsole.log('Error getting enorllments data');\n\t\t}\n\t}\n\t\n\n\tcreateEnrollment = async (courseId) => {\n\t\tconsole.log('Props from APP');\n\t\tconsole.log();\n\t\tconsole.log(this.props.userInfo)\n\t\ttry {\n\t\t\tconst url = process.env.REACT_APP_API_URL + \"/api/v1/enrollments/\" + courseId + this.props.userInfo.loggedInUserId\n\t\t\tconst createdEnrollmentResponse = await fetch(url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tcredentials:'inculde',\n\t\t\t\tbody: JSON.stringify(courseId),\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type':'application/json'\n\t\t\t\t}\n\t\t\t})\n\t\t\tconsole.log('createdEnrollmentResponse', createdEnrollmentResponse);\n\t\t\tconst createdEnrollmentJson = createdEnrollmentResponse.json()\n\t\t\tconsole.log(\"here is what we get when we try to enroll in a course\");\n\t\t\tconsole.log(createdEnrollmentJson);\n\t\t\tif (createdEnrollmentResponse.status === 201 ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tenrollments:[...this.state.enrollments, createdEnrollmentJson.data]\n\t\t\t\t})\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('error enrolling in course');\n\t\t\tconsole.error(error)\n\t\t}\n\t\t\n\t}\n\trender() {\n\t\tconsole.log('here is the state in the enrollment container');\n\t\tconsole.log(this.state);\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<h2> Enrollment Container</h2>\t\n\t\t\t\t<EnrollmentContainer createEnrollment={this.createEnrollment}/>\t\n\t\t\t</React.Fragment>\n\n\t\t)\n\t}\n}\n\n"]},"metadata":{},"sourceType":"module"}