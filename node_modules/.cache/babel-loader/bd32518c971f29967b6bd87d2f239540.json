{"ast":null,"code":"var _jsxFileName = \"/Users/matthewwallace/cymatics/ronin-react/src/MilestoneContainer/index.js\";\nimport React, { Component } from 'react';\nimport MilestoneList from '../MilestoneList';\nimport CreateMilestoneForm from '../CreateMilestoneForm';\nexport default class MilestoneContainer extends Component {\n  constructor(props) {\n    console.log('PROPS IN MILESTONE CONTAINER');\n    super(props);\n\n    this.getMilestones = async () => {\n      try {\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/milestones/\";\n        const milestonesResponse = await fetch(url, {\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const milestonesJson = await milestonesResponse.json();\n        console.log('this is milestones json', milestonesJson);\n        console.log(milestonesResponse);\n        this.setState({\n          milestones: milestonesJson.data\n        });\n      } catch (error) {\n        console.log('Error getting Milestones data');\n      }\n    };\n\n    this.createMilestone = async courseId => {\n      console.log('THIS SHOULD BE PROPS FROM APP');\n      console.log(this.props.userInfo);\n      console.log(this.props.userInfo.loggedInUserId);\n      console.log('HERE IS THE milestone BEING ADDED');\n      console.log(courseId);\n\n      try {\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/milestones/\" + courseId;\n        const createdMilestoneResponse = await fetch(url, {\n          method: 'POST',\n          credentials: 'include',\n          body: JSON.stringify(courseId),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log(\"createdMilsetoneResponse\", createdMilestoneResponse);\n        const createMilestoneJson = await createdMilestoneResponse.json();\n        console.log('here is what we got back after trying to add a course');\n        console.log(createMilestoneJson);\n\n        if (createdMilestoneResponse.status === 201) {\n          this.setState({\n            milestones: [...this.state.milestones, createMilestoneJson.data]\n          });\n        }\n      } catch (error) {\n        console.error(\"Error adding milestone\");\n        console.error(error);\n      }\n    };\n\n    this.state = {\n      milestones: [],\n      idOfMilestoneToEdit: -1\n    };\n  }\n\n  componentDidMount() {\n    this.getMilestones();\n  }\n\n  render() {\n    console.log(' here is the state in render in Milestone Container');\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }\n    }, \"Milestone Container\"), /*#__PURE__*/React.createElement(CreateMilestoneForm, {\n      createMilestone: this.props.createMilestone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(MilestoneList, {\n      createMilestone: this.createMilestone,\n      milestones: this.state.milestones,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/matthewwallace/cymatics/ronin-react/src/MilestoneContainer/index.js"],"names":["React","Component","MilestoneList","CreateMilestoneForm","MilestoneContainer","constructor","props","console","log","getMilestones","url","process","env","REACT_APP_API_URL","milestonesResponse","fetch","credentials","headers","milestonesJson","json","setState","milestones","data","error","createMilestone","courseId","userInfo","loggedInUserId","createdMilestoneResponse","method","body","JSON","stringify","createMilestoneJson","status","state","idOfMilestoneToEdit","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport MilestoneList from '../MilestoneList'\nimport CreateMilestoneForm from '../CreateMilestoneForm'\n\nexport default class MilestoneContainer extends Component {\n\tconstructor(props) {\n\t\tconsole.log('PROPS IN MILESTONE CONTAINER');\n\t\tsuper(props)\n\t\tthis.state ={\n\t\t\tmilestones:[],\n\t\t\tidOfMilestoneToEdit: -1\n\t\t}\n\t}\n\n\tcomponentDidMount () {\n\t\tthis.getMilestones()\n\t}\n\n\tgetMilestones = async () => {\n\t\ttry {\n\t\t\tconst url = process.env.REACT_APP_API_URL + \"/api/v1/milestones/\" \n\t\t\tconst milestonesResponse = await fetch(url, {\n\t\t\t\t   \tcredentials: 'include',\n\t\t\t\t   \theaders: { \n\t\t\t\t   \t\t'Content-Type': 'application/json' \n\t\t\t\t   \t}\n\t\t\t\t})\t   \n\t\t\tconst milestonesJson = await milestonesResponse.json()\n\t\t\tconsole.log('this is milestones json' ,milestonesJson);\n\t\t\tconsole.log(milestonesResponse);\n\t\t\tthis.setState({\n\t\t\t\tmilestones: milestonesJson.data\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tconsole.log('Error getting Milestones data');\n\t\t}\n\t}\n\n\tcreateMilestone = async (courseId) => {\n\t\tconsole.log('THIS SHOULD BE PROPS FROM APP');\n \t\tconsole.log(this.props.userInfo)\n \t\tconsole.log(this.props.userInfo.loggedInUserId);\n \t\tconsole.log('HERE IS THE milestone BEING ADDED');\n \t\tconsole.log(courseId);\n\t\ttry {\n\t\t\tconst url = process.env.REACT_APP_API_URL + \"/api/v1/milestones/\" + courseId\n\t\t\tconst createdMilestoneResponse = await fetch(url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tcredentials: 'include',\n\t\t\t\tbody: JSON.stringify(courseId),\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type':'application/json'\n\t\t\t\t}\n\t\t\t})\n\t\t\tconsole.log(\"createdMilsetoneResponse\", createdMilestoneResponse);\n\t\t\tconst createMilestoneJson = await createdMilestoneResponse.json()\n\t\t\tconsole.log('here is what we got back after trying to add a course');\n\t\t\tconsole.log(createMilestoneJson);\n\t\t\tif (createdMilestoneResponse.status === 201 ){\n\t\t\t\tthis.setState({\n\t\t\t\t\tmilestones:[...this.state.milestones, createMilestoneJson.data]\n\t\t\t\t})\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error adding milestone\");\n\t\t\tconsole.error(error)\n\t\t}\n\n\t}\n\n\trender() {\n\t\tconsole.log(' here is the state in render in Milestone Container');\n\t\tconsole.log(this.state);\n\t\treturn (\n\n\t\t\t<React.Fragment>\n\t\t\t\t<h2>Milestone Container</h2>\n\t\t\t\t<CreateMilestoneForm \n\t\t\t\t\tcreateMilestone={this.props.createMilestone} />\n\t\t\t\t<MilestoneList \n\t\t\t\t\tcreateMilestone={this.createMilestone}\n\t\t\t\t\tmilestones={this.state.milestones}/>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\t\n\n\n\n"]},"metadata":{},"sourceType":"module"}