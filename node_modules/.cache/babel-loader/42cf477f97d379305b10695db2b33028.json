{"ast":null,"code":"var _jsxFileName = \"/Users/matthewwallace/cymatics/ronin-react/ronin-app/src/CourseContainer/index.js\";\nimport React, { Component } from 'react';\nimport CourseList from '../CourseList';\nimport CreateCourseForm from '../CreateCourseForm';\nexport default class courseContainer extends Component {\n  constructor() {\n    super();\n\n    this.getCourses = async () => {\n      try {\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/courses/\";\n        const coursesResponse = await fetch(url, {\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const coursesJson = await coursesResponse.json();\n        console.log('this is courses json', coursesJson);\n        console.log(coursesResponse);\n        this.setState({\n          courses: coursesJson.data\n        });\n      } catch (error) {\n        console.log('Error getting courses data');\n      }\n    };\n\n    this.createCourse = async courseToAdd => {\n      console.log('here is the course we are tyring to add');\n      console.log(courseToAdd);\n      console.log(this.state.courses);\n\n      try {\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/courses/create/\" + this.props.userInfo.id;\n        const createdCourseResponse = await fetch(url, {\n          credentials: 'include',\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(courseToAdd)\n        });\n        console.log(\"createdCourseResponse\", createdCourseResponse);\n        const createCourseJson = await createdCourseResponse.json();\n        console.log('here is what we got back after trying to add a course');\n        console.log(createCourseJson);\n\n        if (createdCourseResponse.status === 200) {\n          this.setState({\n            courses: [...this.state.courses, createCourseJson.data]\n          });\n        }\n      } catch (error) {\n        console.error(\"Error adding course\");\n        console.error(error);\n      }\n    };\n\n    this.state = {\n      courses: []\n    };\n  }\n\n  componentDidMount() {\n    this.getCourses();\n  }\n\n  render() {\n    console.log(\"here is the this.state in render() in user container\");\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }\n    }, \"Courses Contianer\"), /*#__PURE__*/React.createElement(CreateCourseForm, {\n      createCourse: this.createCourse,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(CourseList, {\n      courses: this.state.courses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/matthewwallace/cymatics/ronin-react/ronin-app/src/CourseContainer/index.js"],"names":["React","Component","CourseList","CreateCourseForm","courseContainer","constructor","getCourses","url","process","env","REACT_APP_API_URL","coursesResponse","fetch","credentials","headers","coursesJson","json","console","log","setState","courses","data","error","createCourse","courseToAdd","state","props","userInfo","id","createdCourseResponse","method","body","JSON","stringify","createCourseJson","status","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport CourseList from '../CourseList'\nimport CreateCourseForm from '../CreateCourseForm'\n\nexport default class courseContainer extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tcourses: [],\n\t\t}\n\t}\n\n\n\tcomponentDidMount() {\n\t\tthis.getCourses()\n\t}\n\n\tgetCourses = async () => {\n\t\ttry {\n\t\t\tconst url = process.env.REACT_APP_API_URL + \"/api/v1/courses/\" \n\t\t\tconst coursesResponse = await fetch(url, {\n\t\t\t\t   \tcredentials: 'include',\n\t\t\t\t   \theaders: { \n\t\t\t\t   \t\t'Content-Type': 'application/json' \n\t\t\t\t   \t}\n\t\t\t\t})\t   \n\t\t\tconst coursesJson = await coursesResponse.json()\n\t\t\tconsole.log('this is courses json' ,coursesJson);\n\t\t\tconsole.log(coursesResponse);\n\t\t\tthis.setState({\n\t\t\t\tcourses: coursesJson.data\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tconsole.log('Error getting courses data');\n\t\t}\n\t}\n\n\tcreateCourse = async (courseToAdd) => {\n\t\tconsole.log('here is the course we are tyring to add');\n\t\tconsole.log(courseToAdd);\n\t\tconsole.log(this.state.courses);\n\t\ttry {\n\t\t\tconst url = process.env.REACT_APP_API_URL + \"/api/v1/courses/create/\" + this.props.userInfo.id\n\t\t\tconst createdCourseResponse = await fetch(url, {\n\t\t\t\tcredentials: 'include',\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(courseToAdd)\n\t\t\t})\n\t\t\tconsole.log(\"createdCourseResponse\", createdCourseResponse);\n\t\t\tconst createCourseJson = await createdCourseResponse.json()\n\t\t\tconsole.log('here is what we got back after trying to add a course');\n\t\t\tconsole.log(createCourseJson);\n\t\t\tif (createdCourseResponse.status === 200 ){\n\t\t\t\tthis.setState({\n\t\t\t\t\tcourses:[...this.state.courses, createCourseJson.data]\n\t\t\t\t})\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error adding course\");\n\t\t\tconsole.error(error)\n\t\t}\n\n\t}\n\t\n\trender() {\n\t\tconsole.log(\"here is the this.state in render() in user container\");\n\t\tconsole.log(this.state);\n\t\treturn(\n\t\t\t<React.Fragment>\n\t\t\t\t<h2>Courses Contianer</h2>\n\t\t\t\t<CreateCourseForm createCourse={this.createCourse}/>\n\t\t\t\t<CourseList \n\t\t\t\t\tcourses={this.state.courses} \n\t\t\t\t/>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}