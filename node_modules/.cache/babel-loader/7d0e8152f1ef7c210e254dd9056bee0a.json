{"ast":null,"code":"var _jsxFileName = \"/Users/matthewwallace/cymatics/ronin-react/src/EnrollmentContainer/index.js\";\nimport React, { Component } from 'react';\nimport EnrollmentList from '../EnrollmentList';\nexport default class EnrollmentContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getEnrollments = async () => {\n      try {\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/enrollments/\";\n        const enrollmentsResponse = await fetch(url, {\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const enrollmentsJson = await enrollmentsResponse.json();\n        console.log('this is enrollmentsJson', enrollmentsJson);\n        console.log('this is enrollmentsResponse', enrollmentsResponse);\n        this.setState({\n          enrollments: enrollmentsJson.data\n        });\n      } catch (error) {\n        console.log('Error getting enrollments data');\n        console.error(error);\n      }\n    };\n\n    this.createEnrollment = async enrollmentToAdd => {\n      console.log('Props from APP');\n      console.log('HERE IS THE COURSE ID IN ENROLLMENTS');\n      console.log(EnrollmentToAdd);\n\n      try {\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/enrollments/\" + this.props.idofCourseToEdit + '/' + this.props.loggedInUserId;\n        const createdEnrollmentResponse = await fetch(url, {\n          method: 'POST',\n          credentials: 'include',\n          body: JSON.stringify(courseId),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('createdEnrollmentResponse', createdEnrollmentResponse);\n        const createdEnrollmentJson = await createdEnrollmentResponse.json();\n        console.log(\"here is what we get when we try to enroll in a course\");\n        console.log(createdEnrollmentJson);\n\n        if (createdEnrollmentResponse.status === 201) {\n          this.setState({\n            enrollments: [...this.state.enrollments, createdEnrollmentJson.data]\n          });\n        }\n\n        console.log('HERE IS THE STATE OF ENROLLMENTS IN APP.JS');\n        console.log(this.state.enrollments);\n      } catch (error) {\n        console.error('error enrolling in course');\n        console.error(error);\n      }\n    };\n\n    this.deleteEnrollment = async idOfEnrollmentToDelete => {\n      console.log('delete enrollment');\n      const url = process.env.REACT_APP_API_URL + \"/api/v1/enrollments/\" + idOfEnrollmentToDelete;\n\n      try {\n        const deleteEnrollmentResponse = await fetch(url, {\n          credentials: \"include\",\n          method: \"DELETE\"\n        });\n        console.log(\"deleteEnrollmentResponse\", deleteEnrollmentResponse);\n        const deleteEnrollmentJson = await deleteEnrollmentResponse.json();\n        console.log(\"deleteEnrollmentJson\", deleteEnrollmentJson);\n\n        if (deleteEnrollmentResponse.status === 200) {\n          this.setState({\n            courses: this.state.enrollments.filter(enrollment => enrollment.id !== idOfEnrollmentToDelete)\n          });\n        }\n      } catch (error) {\n        console.error('Error deleting enrollment');\n        console.error(error);\n      }\n    };\n\n    this.state = {\n      enrollments: []\n    };\n  }\n\n  componentDidMount() {\n    this.getEnrollments();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(EnrollmentList, {\n      deleteEnrollment: this.deleteEnrollment,\n      enrollments: this.state.enrollments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/matthewwallace/cymatics/ronin-react/src/EnrollmentContainer/index.js"],"names":["React","Component","EnrollmentList","EnrollmentContainer","constructor","props","getEnrollments","url","process","env","REACT_APP_API_URL","enrollmentsResponse","fetch","credentials","headers","enrollmentsJson","json","console","log","setState","enrollments","data","error","createEnrollment","enrollmentToAdd","EnrollmentToAdd","idofCourseToEdit","loggedInUserId","createdEnrollmentResponse","method","body","JSON","stringify","courseId","createdEnrollmentJson","status","state","deleteEnrollment","idOfEnrollmentToDelete","deleteEnrollmentResponse","deleteEnrollmentJson","courses","filter","enrollment","id","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport EnrollmentList from '../EnrollmentList'\n\n\nexport default class EnrollmentContainer extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tenrollments: []\t\t\t\n\t\t}\n\t}\n\t\n\tcomponentDidMount() {\n    \tthis.getEnrollments()\n  \t}\n\n  \tgetEnrollments = async () => {\n\t    try {\n\t      const url = process.env.REACT_APP_API_URL + \"/api/v1/enrollments/\"\n\t      const enrollmentsResponse = await fetch(url, {\n\t        credentials:'include',\n\t        headers: {\n\t          'Content-Type': 'application/json'\n\t        }\n\t      })\n\t      const enrollmentsJson = await enrollmentsResponse.json()\n\t      console.log('this is enrollmentsJson', enrollmentsJson);\n\t      console.log('this is enrollmentsResponse', enrollmentsResponse);\n\t      this.setState({\n\t        enrollments: enrollmentsJson.data\n\t      })\n\t    } catch (error) {\n\t      console.log('Error getting enrollments data');\n\t      console.error(error)\n\t    }\n\t}\n\n\t createEnrollment = async (enrollmentToAdd) => {\n\t    console.log('Props from APP');\n\t    console.log('HERE IS THE COURSE ID IN ENROLLMENTS');\n\t    console.log(EnrollmentToAdd);\n\t    try {\n\t      const url = process.env.REACT_APP_API_URL  + \"/api/v1/enrollments/\" + this.props.idofCourseToEdit + '/' + this.props.loggedInUserId\n\t      const createdEnrollmentResponse = await fetch(url, {\n\t        method: 'POST',\n\t        credentials:'include',\n\t        body: JSON.stringify(courseId),\n\t        headers: {\n\t          'Content-Type':'application/json'\n\t        }\n\t      })\n\t      console.log('createdEnrollmentResponse', createdEnrollmentResponse);\n\t      const createdEnrollmentJson = await createdEnrollmentResponse.json()\n\t      console.log(\"here is what we get when we try to enroll in a course\");\n\t      console.log(createdEnrollmentJson);\n\t      if (createdEnrollmentResponse.status === 201 ) {\n\t        this.setState({\n\t          enrollments:[...this.state.enrollments, createdEnrollmentJson.data]\n\t        })\n\t      }\n\t      console.log('HERE IS THE STATE OF ENROLLMENTS IN APP.JS');\n\t      console.log(this.state.enrollments)\n\t    } catch (error) {\n\t      console.error('error enrolling in course');\n\t      console.error(error)\n\t    }\n\t    \n\t}\n\t\n\n\tdeleteEnrollment = async (idOfEnrollmentToDelete) => {\n\t\tconsole.log('delete enrollment');\n\t\tconst url = process.env.REACT_APP_API_URL + \"/api/v1/enrollments/\" + idOfEnrollmentToDelete\n\t\ttry {\n\t\t\tconst deleteEnrollmentResponse = await fetch(url, {\n\t\t\t\tcredentials: \"include\",\n\t\t\t\tmethod: \"DELETE\"\n\t\t\t})\n\t\t\tconsole.log(\"deleteEnrollmentResponse\", deleteEnrollmentResponse);\n\t\t\tconst deleteEnrollmentJson = await deleteEnrollmentResponse.json()\n\t\t\tconsole.log(\"deleteEnrollmentJson\", deleteEnrollmentJson);\n\t\t\tif (deleteEnrollmentResponse.status === 200) {\n\t\t\t\tthis.setState({\n\t\t\t\tcourses: this.state.enrollments.filter(enrollment => enrollment.id !== idOfEnrollmentToDelete)\n\t\t\t\t})\n\t\t\t}\t\n\t\t} catch (error) {\n\t\t\tconsole.error('Error deleting enrollment');\n\t\t\tconsole.error(error)\n\t\t}\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<EnrollmentList \n\t\t\t\t\tdeleteEnrollment={this.deleteEnrollment}\n\t\t\t\t\tenrollments={this.state.enrollments} />\n\t\t\t\n\t\t\t</React.Fragment>\n\n\t\t)\n\t}\n}\n\n"]},"metadata":{},"sourceType":"module"}