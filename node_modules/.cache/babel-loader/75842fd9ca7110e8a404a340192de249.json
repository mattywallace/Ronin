{"ast":null,"code":"var _jsxFileName = \"/Users/matthewwallace/cymatics/ronin-react/src/UserContainer/index.js\";\nimport React, { Component } from 'react';\nimport EnrollmentContainer from '../EnrollmentContainer';\nexport default class UserContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getEnrollments = async () => {\n      try {\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/enrollments/\" + this.props.loggedInUserId;\n        const enrollmentsResponse = await fetch(url, {\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const enrollmentsJson = await enrollmentsResponse.json();\n        console.log('this is enrollmentsJson', enrollmentsJson);\n        console.log('this is enrollmentsResponse', enrollmentsResponse);\n        this.setState({\n          enrollments: enrollmentsJson.data\n        });\n      } catch (error) {\n        console.log('Error getting enrollments data');\n        console.error(error);\n      }\n    };\n\n    this.createEnrollment = async (enrollmentToAdd, courseId) => {\n      console.log('Props from APP');\n      console.log('HERE IS THE COURSE ID IN ENROLLMENTS');\n      console.log(enrollmentToAdd);\n\n      try {\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/enrollments/\" + courseId + '/' + this.props.loggedInUserId;\n        const createdEnrollmentResponse = await fetch(url, {\n          method: 'POST',\n          credentials: 'include',\n          body: JSON.stringify(enrollmentToAdd),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('createdEnrollmentResponse', createdEnrollmentResponse);\n        const createdEnrollmentJson = await createdEnrollmentResponse.json();\n        console.log(\"here is what we get when we try to enroll in a course\");\n        console.log(createdEnrollmentJson);\n\n        if (createdEnrollmentResponse.status === 201) {\n          this.setState({\n            enrollments: [...this.state.enrollments, createdEnrollmentJson.data]\n          });\n        }\n\n        console.log('HERE IS THE STATE OF ENROLLMENTS IN APP.JS');\n        console.log(this.state.enrollments);\n      } catch (error) {\n        console.error('error enrolling in course');\n        console.error(error);\n      }\n    };\n\n    this.getUsers = async () => {\n      try {\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/users/\";\n        const usersResponse = await fetch(url);\n        const usersJson = await usersResponse.json();\n        console.log(usersJson);\n        console.log(usersResponse);\n        this.setState({\n          users: usersJson.data\n        });\n      } catch (error) {\n        console.log('Error getting users data');\n      }\n    };\n\n    this.state = {\n      users: [],\n      enrollments: []\n    };\n  }\n\n  componentDidMount() {\n    this.getUsers();\n    this.getEnrollments();\n  }\n\n  render() {\n    console.log(\"here is the this.state in render() in user container\");\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }\n    }, \" User Portal \"), /*#__PURE__*/React.createElement(EnrollmentContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/matthewwallace/cymatics/ronin-react/src/UserContainer/index.js"],"names":["React","Component","EnrollmentContainer","UserContainer","constructor","props","getEnrollments","url","process","env","REACT_APP_API_URL","loggedInUserId","enrollmentsResponse","fetch","credentials","headers","enrollmentsJson","json","console","log","setState","enrollments","data","error","createEnrollment","enrollmentToAdd","courseId","createdEnrollmentResponse","method","body","JSON","stringify","createdEnrollmentJson","status","state","getUsers","usersResponse","usersJson","users","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport EnrollmentContainer from '../EnrollmentContainer'\n\n\n\nexport default class UserContainer extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tusers: [],\n\t\t\tenrollments: [],\n\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getUsers()\n\t\tthis.getEnrollments ()\n\t}\n\n\n  \tgetEnrollments = async () => {\n\t    try {\n\t      const url = process.env.REACT_APP_API_URL + \"/api/v1/enrollments/\" + this.props.loggedInUserId\n\t      const enrollmentsResponse = await fetch(url, {\n\t        credentials:'include',\n\t        headers: {\n\t          'Content-Type': 'application/json'\n\t        }\n\t      })\n\t      const enrollmentsJson = await enrollmentsResponse.json()\n\t      console.log('this is enrollmentsJson', enrollmentsJson);\n\t      console.log('this is enrollmentsResponse', enrollmentsResponse);\n\t      this.setState({\n\t        enrollments: enrollmentsJson.data\n\t      })\n\t    } catch (error) {\n\t      console.log('Error getting enrollments data');\n\t      console.error(error)\n\t    }\n\t}\n\n\t createEnrollment = async (enrollmentToAdd, courseId) => {\n\t    console.log('Props from APP');\n\t    console.log('HERE IS THE COURSE ID IN ENROLLMENTS');\n\t    console.log(enrollmentToAdd);\n\t    try {\n\t      const url = process.env.REACT_APP_API_URL  + \"/api/v1/enrollments/\" + courseId + '/' + this.props.loggedInUserId\n\t      const createdEnrollmentResponse = await fetch(url, {\n\t        method: 'POST',\n\t        credentials:'include',\n\t        body: JSON.stringify(enrollmentToAdd),\n\t        headers: {\n\t          'Content-Type':'application/json'\n\t        }\n\t      })\n\t      console.log('createdEnrollmentResponse', createdEnrollmentResponse);\n\t      const createdEnrollmentJson = await createdEnrollmentResponse.json()\n\t      console.log(\"here is what we get when we try to enroll in a course\");\n\t      console.log(createdEnrollmentJson);\n\t      if (createdEnrollmentResponse.status === 201 ) {\n\t        this.setState({\n\t          enrollments:[...this.state.enrollments, createdEnrollmentJson.data]\n\t        })\n\t      }\n\t      console.log('HERE IS THE STATE OF ENROLLMENTS IN APP.JS');\n\t      console.log(this.state.enrollments)\n\t    } catch (error) {\n\t      console.error('error enrolling in course');\n\t      console.error(error)\n\t    }\n\t    \n\t}\n\n\tgetUsers = async () => {\n\t\ttry {\n\t\t\tconst url = process.env.REACT_APP_API_URL + \"/api/v1/users/\"\n\t\t\tconst usersResponse = await fetch(url)\n\t\t\tconst usersJson = await usersResponse.json()\n\t\t\tconsole.log(usersJson);\n\t\t\tconsole.log(usersResponse);\n\t\t\tthis.setState({\n\t\t\t\tusers: usersJson.data\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tconsole.log('Error getting users data');\n\t\t}\n\t}\n\trender() {\n\t\tconsole.log(\"here is the this.state in render() in user container\");\n\t\tconsole.log(this.state);\n\t\treturn(\n\t\t\t<React.Fragment>\n\t\t\t\t<h2> User Portal </h2>\n\t\t\t\t<EnrollmentContainer />\n\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}