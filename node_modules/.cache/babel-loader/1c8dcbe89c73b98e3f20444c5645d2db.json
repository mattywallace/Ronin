{"ast":null,"code":"var _jsxFileName = \"/Users/matthewwallace/cymatics/ronin-react/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport CourseContainer from './CourseContainer';\nimport LogInRegisterForm from './LogInRegisterForm';\nimport EnrollmentContainer from './EnrollmentContainer';\nimport Header from './Header';\nexport default class App extends Component {\n  constructor() {\n    console.log('THIS IS PROCESS ENV');\n    console.log(process.env);\n    super();\n\n    this.register = async registerInfo => {\n      console.log(\"register() in app. js called with the following info\", registerInfo);\n      const url = process.env.REACT_APP_API_URL + \"/api/v1/users/register\";\n\n      try {\n        const registerResponse = await fetch(url, {\n          credentials: 'include',\n          method: 'POST',\n          body: JSON.stringify(registerInfo),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('registerResponse', registerResponse);\n        const registerJson = await registerResponse.json();\n        console.log(\"registerJson\", registerJson);\n\n        if (registerResponse.status === 201) {\n          this.setState({\n            loggedIn: true,\n            loggedInUserEmail: registerJson.data.email,\n            loggedInUserId: registerJson.data.id,\n            loggedInUserAdmin: registerJson.data.is_admin\n          });\n        }\n      } catch (error) {\n        console.error('Error trying to register with API');\n        console.error(error);\n      }\n    };\n\n    this.login = async loginInfo => {\n      const url = process.env.REACT_APP_API_URL + '/api/v1/users/login';\n\n      try {\n        const loginResponse = await fetch(url, {\n          credentials: 'include',\n          method: 'POST',\n          body: JSON.stringify(loginInfo),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('loginResponse', loginResponse);\n        const loginJson = await loginResponse.json();\n        console.log('loginJson', loginJson);\n        console.log(loginJson.data);\n\n        if (loginResponse.status === 200) {\n          this.setState({\n            loggedIn: true,\n            loggedInUserEmail: loginJson.data.email,\n            loggedInUserId: loginJson.data.id,\n            loggedInUserIsAdmin: loginJson.data.is_admin\n          });\n        }\n\n        console.log(\"here is what is currently in state\");\n        console.log(this.state);\n      } catch (error) {\n        console.error('Error trying to log in');\n        console.error(error);\n      }\n    };\n\n    this.logout = async () => {\n      try {\n        const url = process.env.REACT_APP_API_URL + '/api/v1/users/logout';\n        const logoutResponse = await fetch(url, {\n          credentials: 'include'\n        });\n        console.log('logoutResponse', logoutResponse);\n        const logoutJson = await logoutResponse.json();\n        console.log(logoutJson, 'logoutJson');\n\n        if (logoutResponse.status === 200) {\n          this.setState({\n            loggedIn: false,\n            loggedInUserEmail: '',\n            loggedInUserId: '',\n            loggedInUserIsAdmin: false\n          });\n        }\n      } catch (error) {\n        console.error('error logging out');\n        console.error(error);\n      }\n    };\n\n    this.getEnrollments = async () => {\n      try {\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/enrollments/\";\n        const enrollmentsResponse = await fetch(url, {\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const enrollmentsJson = await enrollmentsResponse.json();\n        console.log('this is enrollmentsJson', enrollmentsJson);\n        console.log('this is enrollmentsResponse', enrollmentsResponse);\n        this.setState({\n          enrollments: enrollmentsJson.data\n        });\n      } catch (error) {\n        console.log('Error getting enrollments data');\n        console.error(error);\n      }\n    };\n\n    this.createEnrollment = async courseId => {\n      console.log('Props from APP');\n      console.log('HERE IS THE COURSE ID IN ENROLLMENTS');\n      console.log(courseId);\n\n      try {\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/enrollments/\" + courseId + '/' + this.state.loggedInUserId;\n        const createdEnrollmentResponse = await fetch(url, {\n          method: 'POST',\n          credentials: 'include',\n          body: JSON.stringify(courseId),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('createdEnrollmentResponse', createdEnrollmentResponse);\n        const createdEnrollmentJson = await createdEnrollmentResponse.json();\n        console.log(\"here is what we get when we try to enroll in a course\");\n        console.log(createdEnrollmentJson);\n\n        if (createdEnrollmentResponse.status === 201) {\n          this.setState({\n            enrollments: [...this.state.enrollments, createdEnrollmentJson.data]\n          });\n        }\n\n        console.log('HERE IS THE STATE OF ENROLLMENTS IN APP.JS');\n        console.log(this.state.enrollments);\n      } catch (error) {\n        console.error('error enrolling in course');\n        console.error(error);\n      }\n    };\n\n    this.state = {\n      loggedIn: false,\n      loggedInUserEmail: \"\",\n      loggedInUserId: \"\",\n      loggedInUserIsAdmin: null,\n      enrollments: []\n    };\n  }\n\n  componentDidMount() {\n    this.getEnrollments();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 4\n      }\n    }, this.state.loggedIn ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      logout: this.logout,\n      email: this.state.loggedInUserEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(CourseContainer, {\n      userInfo: this.state,\n      createEnrollment: this.createEnrollment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(EnrollmentContainer, {\n      userInfo: this.state,\n      enrollments: this.state.enrollments,\n      createEnrollment: this.createEnrollment,\n      getEnrollments: this.getEnrollments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }\n    })) : /*#__PURE__*/React.createElement(LogInRegisterForm, {\n      login: this.login,\n      register: this.register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/matthewwallace/cymatics/ronin-react/src/App.js"],"names":["React","Component","CourseContainer","LogInRegisterForm","EnrollmentContainer","Header","App","constructor","console","log","process","env","register","registerInfo","url","REACT_APP_API_URL","registerResponse","fetch","credentials","method","body","JSON","stringify","headers","registerJson","json","status","setState","loggedIn","loggedInUserEmail","data","email","loggedInUserId","id","loggedInUserAdmin","is_admin","error","login","loginInfo","loginResponse","loginJson","loggedInUserIsAdmin","state","logout","logoutResponse","logoutJson","getEnrollments","enrollmentsResponse","enrollmentsJson","enrollments","createEnrollment","courseId","createdEnrollmentResponse","createdEnrollmentJson","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAGA,eAAe,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAEzCM,EAAAA,WAAW,GAAG;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAApB;AACA;;AAHY,SAcdC,QAdc,GAcH,MAAOC,YAAP,IAAwB;AACjCL,MAAAA,OAAO,CAACC,GAAR,CAAY,sDAAZ,EAAoEI,YAApE;AACA,YAAMC,GAAG,GAAGJ,OAAO,CAACC,GAAR,CAAYI,iBAAZ,GAAgC,wBAA5C;;AACA,UAAI;AACF,cAAMC,gBAAgB,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;AACxCI,UAAAA,WAAW,EAAE,SAD2B;AAExCC,UAAAA,MAAM,EAAE,MAFgC;AAGxCC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,YAAf,CAHkC;AAIxCU,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AAJ+B,SAAN,CAApC;AAQAf,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCO,gBAAhC;AACA,cAAMQ,YAAY,GAAG,MAAMR,gBAAgB,CAACS,IAAjB,EAA3B;AACAjB,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4Be,YAA5B;;AACA,YAAGR,gBAAgB,CAACU,MAAjB,KAA4B,GAA/B,EAAoC;AAClC,eAAKC,QAAL,CAAc;AACZC,YAAAA,QAAQ,EAAE,IADE;AAEZC,YAAAA,iBAAiB,EAAEL,YAAY,CAACM,IAAb,CAAkBC,KAFzB;AAGZC,YAAAA,cAAc,EAAER,YAAY,CAACM,IAAb,CAAkBG,EAHtB;AAIZC,YAAAA,iBAAiB,EAAEV,YAAY,CAACM,IAAb,CAAkBK;AAJzB,WAAd;AAMD;AACF,OApBD,CAoBE,OAAOC,KAAP,EAAc;AACd5B,QAAAA,OAAO,CAAC4B,KAAR,CAAc,mCAAd;AACA5B,QAAAA,OAAO,CAAC4B,KAAR,CAAcA,KAAd;AACH;AACF,KAzCe;;AAAA,SA2CdC,KA3Cc,GA2CN,MAAOC,SAAP,IAAqB;AAC3B,YAAMxB,GAAG,GAAGJ,OAAO,CAACC,GAAR,CAAYI,iBAAZ,GAAgC,qBAA5C;;AACA,UAAI;AACF,cAAMwB,aAAa,GAAG,MAAMtB,KAAK,CAACH,GAAD,EAAM;AACrCI,UAAAA,WAAW,EAAC,SADyB;AAErCC,UAAAA,MAAM,EAAE,MAF6B;AAGrCC,UAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAegB,SAAf,CAHgC;AAIrCf,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AAJ4B,SAAN,CAAjC;AAQAf,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B8B,aAA7B;AACA,cAAMC,SAAS,GAAG,MAAMD,aAAa,CAACd,IAAd,EAAxB;AACAjB,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB+B,SAAzB;AACAhC,QAAAA,OAAO,CAACC,GAAR,CAAY+B,SAAS,CAACV,IAAtB;;AACC,YAAGS,aAAa,CAACb,MAAd,KAAyB,GAA5B,EAAiC;AAChC,eAAKC,QAAL,CAAc;AACZC,YAAAA,QAAQ,EAAE,IADE;AAEZC,YAAAA,iBAAiB,EAAEW,SAAS,CAACV,IAAV,CAAeC,KAFtB;AAGZC,YAAAA,cAAc,EAAEQ,SAAS,CAACV,IAAV,CAAeG,EAHnB;AAIZQ,YAAAA,mBAAmB,EAACD,SAAS,CAACV,IAAV,CAAeK;AAJvB,WAAd;AAOD;;AACD3B,QAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKiC,KAAjB;AACD,OAxBD,CAwBE,OAAMN,KAAN,EAAa;AACb5B,QAAAA,OAAO,CAAC4B,KAAR,CAAc,wBAAd;AACA5B,QAAAA,OAAO,CAAC4B,KAAR,CAAcA,KAAd;AACD;AACF,KAzEa;;AAAA,SA2EdO,MA3Ec,GA2EL,YAAY;AACnB,UAAI;AACF,cAAM7B,GAAG,GAAGJ,OAAO,CAACC,GAAR,CAAYI,iBAAZ,GAAiC,sBAA7C;AACA,cAAM6B,cAAc,GAAG,MAAM3B,KAAK,CAACH,GAAD,EAAM;AACtCI,UAAAA,WAAW,EAAC;AAD0B,SAAN,CAAlC;AAGAV,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BmC,cAA9B;AACA,cAAMC,UAAU,GAAG,MAAMD,cAAc,CAACnB,IAAf,EAAzB;AACAjB,QAAAA,OAAO,CAACC,GAAR,CAAYoC,UAAZ,EAAwB,YAAxB;;AACA,YAAID,cAAc,CAAClB,MAAf,KAA0B,GAA9B,EAAoC;AAClC,eAAKC,QAAL,CAAc;AACZC,YAAAA,QAAQ,EAAC,KADG;AAEZC,YAAAA,iBAAiB,EAAC,EAFN;AAGZG,YAAAA,cAAc,EAAC,EAHH;AAIZS,YAAAA,mBAAmB,EAAE;AAJT,WAAd;AAMD;AACF,OAhBD,CAgBE,OAAOL,KAAP,EAAc;AACd5B,QAAAA,OAAO,CAAC4B,KAAR,CAAc,mBAAd;AACA5B,QAAAA,OAAO,CAAC4B,KAAR,CAAcA,KAAd;AACD;AAEF,KAjGa;;AAAA,SAuGdU,cAvGc,GAuGG,YAAY;AAC3B,UAAI;AACF,cAAMhC,GAAG,GAAGJ,OAAO,CAACC,GAAR,CAAYI,iBAAZ,GAAgC,sBAA5C;AACA,cAAMgC,mBAAmB,GAAG,MAAM9B,KAAK,CAACH,GAAD,EAAM;AAC3CI,UAAAA,WAAW,EAAC,SAD+B;AAE3CK,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AAFkC,SAAN,CAAvC;AAMA,cAAMyB,eAAe,GAAG,MAAMD,mBAAmB,CAACtB,IAApB,EAA9B;AACAjB,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCuC,eAAvC;AACAxC,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CsC,mBAA3C;AACA,aAAKpB,QAAL,CAAc;AACZsB,UAAAA,WAAW,EAAED,eAAe,CAAClB;AADjB,SAAd;AAGD,OAdD,CAcE,OAAOM,KAAP,EAAc;AACd5B,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACAD,QAAAA,OAAO,CAAC4B,KAAR,CAAcA,KAAd;AACD;AACF,KA1Ha;;AAAA,SA4Hdc,gBA5Hc,GA4HK,MAAOC,QAAP,IAAoB;AACrC3C,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY0C,QAAZ;;AACA,UAAI;AACF,cAAMrC,GAAG,GAAGJ,OAAO,CAACC,GAAR,CAAYI,iBAAZ,GAAiC,sBAAjC,GAA0DoC,QAA1D,GAAqE,GAArE,GAA2E,KAAKT,KAAL,CAAWV,cAAlG;AACA,cAAMoB,yBAAyB,GAAG,MAAMnC,KAAK,CAACH,GAAD,EAAM;AACjDK,UAAAA,MAAM,EAAE,MADyC;AAEjDD,UAAAA,WAAW,EAAC,SAFqC;AAGjDE,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe6B,QAAf,CAH2C;AAIjD5B,UAAAA,OAAO,EAAE;AACP,4BAAe;AADR;AAJwC,SAAN,CAA7C;AAQAf,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyC2C,yBAAzC;AACA,cAAMC,qBAAqB,GAAG,MAAMD,yBAAyB,CAAC3B,IAA1B,EAApC;AACAjB,QAAAA,OAAO,CAACC,GAAR,CAAY,uDAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAY4C,qBAAZ;;AACA,YAAID,yBAAyB,CAAC1B,MAA1B,KAAqC,GAAzC,EAA+C;AAC7C,eAAKC,QAAL,CAAc;AACZsB,YAAAA,WAAW,EAAC,CAAC,GAAG,KAAKP,KAAL,CAAWO,WAAf,EAA4BI,qBAAqB,CAACvB,IAAlD;AADA,WAAd;AAGD;;AACDtB,QAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKiC,KAAL,CAAWO,WAAvB;AACD,OArBD,CAqBE,OAAOb,KAAP,EAAc;AACd5B,QAAAA,OAAO,CAAC4B,KAAR,CAAc,2BAAd;AACA5B,QAAAA,OAAO,CAAC4B,KAAR,CAAcA,KAAd;AACD;AAEF,KA1Ja;;AAKZ,SAAKM,KAAL,GAAa;AACXd,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,iBAAiB,EAAE,EAFR;AAGXG,MAAAA,cAAc,EAAE,EAHL;AAIXS,MAAAA,mBAAmB,EAAE,IAJV;AAKXQ,MAAAA,WAAW,EAAC;AALD,KAAb;AAOD;;AAuFDK,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,cAAL;AACD;;AAuDDS,EAAAA,MAAM,GAAI;AACV,wBACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,KAAKb,KAAL,CAAWd,QAAX,gBAEA,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,MAAD;AACE,MAAA,MAAM,EAAE,KAAKe,MADf;AAEE,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWb,iBAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAKE,oBAAC,eAAD;AACE,MAAA,QAAQ,EAAE,KAAKa,KADjB;AAEE,MAAA,gBAAgB,EAAE,KAAKQ,gBAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAUE,oBAAC,mBAAD;AACE,MAAA,QAAQ,EAAE,KAAKR,KADjB;AAEE,MAAA,WAAW,EAAE,KAAKA,KAAL,CAAWO,WAF1B;AAGE,MAAA,gBAAgB,EAAE,KAAKC,gBAHzB;AAIE,MAAA,cAAc,EAAE,KAAKJ,cAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CAFA,gBAyBA,oBAAC,iBAAD;AACE,MAAA,KAAK,EAAE,KAAKT,KADd;AAEE,MAAA,QAAQ,EAAE,KAAKzB,QAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BH,CADD;AAoCD;;AAnM0C","sourcesContent":["import React, {Component} from 'react'\nimport './App.css';\nimport CourseContainer from './CourseContainer'\nimport LogInRegisterForm from './LogInRegisterForm'\nimport EnrollmentContainer from './EnrollmentContainer'\nimport Header from './Header'\n\n\nexport default class App extends Component {\n  \n  constructor() {\n    console.log('THIS IS PROCESS ENV');\n    console.log(process.env);\n    super()\n\n    this.state = {\n      loggedIn: false, \n      loggedInUserEmail: \"\",\n      loggedInUserId: \"\",\n      loggedInUserIsAdmin: null,\n      enrollments:[]\n    }\n  }\n  \n  register = async (registerInfo) => {\n    console.log(\"register() in app. js called with the following info\", registerInfo);\n    const url = process.env.REACT_APP_API_URL + \"/api/v1/users/register\"\n    try {\n      const registerResponse = await fetch(url, {\n        credentials: 'include',\n        method: 'POST',\n        body: JSON.stringify(registerInfo),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      console.log('registerResponse', registerResponse);\n      const registerJson = await registerResponse.json()\n      console.log(\"registerJson\", registerJson);\n      if(registerResponse.status === 201) {\n        this.setState({\n          loggedIn: true,\n          loggedInUserEmail: registerJson.data.email,\n          loggedInUserId: registerJson.data.id,\n          loggedInUserAdmin: registerJson.data.is_admin\n        })\n      }\n    } catch (error) {\n      console.error('Error trying to register with API');\n      console.error(error)\n  }\n}\n\n  login = async (loginInfo) => {\n    const url = process.env.REACT_APP_API_URL + '/api/v1/users/login'\n    try {\n      const loginResponse = await fetch(url, {\n        credentials:'include',\n        method: 'POST',\n        body:JSON.stringify(loginInfo),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      console.log('loginResponse', loginResponse);\n      const loginJson = await loginResponse.json()\n      console.log('loginJson', loginJson);\n      console.log(loginJson.data);\n       if(loginResponse.status === 200) {\n        this.setState({\n          loggedIn: true,\n          loggedInUserEmail: loginJson.data.email,\n          loggedInUserId: loginJson.data.id,\n          loggedInUserIsAdmin:loginJson.data.is_admin\n\n        })\n      }\n      console.log(\"here is what is currently in state\");\n      console.log(this.state);\n    } catch(error) {\n      console.error('Error trying to log in')\n      console.error(error)\n    }\n  }\n\n  logout = async () => {\n    try {\n      const url = process.env.REACT_APP_API_URL  + '/api/v1/users/logout'\n      const logoutResponse = await fetch(url, {\n        credentials:'include'\n      })\n      console.log('logoutResponse', logoutResponse);\n      const logoutJson = await logoutResponse.json()\n      console.log(logoutJson, 'logoutJson');\n      if( logoutResponse.status === 200 ) {\n        this.setState({\n          loggedIn:false,\n          loggedInUserEmail:'',\n          loggedInUserId:'',\n          loggedInUserIsAdmin: false,\n        })\n      }\n    } catch (error) {\n      console.error('error logging out');\n      console.error(error)\n    }\n    \n  }\n\n  componentDidMount() {\n    this.getEnrollments()\n  }\n\n  getEnrollments = async () => {\n    try {\n      const url = process.env.REACT_APP_API_URL + \"/api/v1/enrollments/\"\n      const enrollmentsResponse = await fetch(url, {\n        credentials:'include',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      const enrollmentsJson = await enrollmentsResponse.json()\n      console.log('this is enrollmentsJson', enrollmentsJson);\n      console.log('this is enrollmentsResponse', enrollmentsResponse);\n      this.setState({\n        enrollments: enrollmentsJson.data\n      })\n    } catch (error) {\n      console.log('Error getting enrollments data');\n      console.error(error)\n    }\n  }\n\n  createEnrollment = async (courseId) => {\n    console.log('Props from APP');\n    console.log('HERE IS THE COURSE ID IN ENROLLMENTS');\n    console.log(courseId);\n    try {\n      const url = process.env.REACT_APP_API_URL  + \"/api/v1/enrollments/\" + courseId + '/' + this.state.loggedInUserId\n      const createdEnrollmentResponse = await fetch(url, {\n        method: 'POST',\n        credentials:'include',\n        body: JSON.stringify(courseId),\n        headers: {\n          'Content-Type':'application/json'\n        }\n      })\n      console.log('createdEnrollmentResponse', createdEnrollmentResponse);\n      const createdEnrollmentJson = await createdEnrollmentResponse.json()\n      console.log(\"here is what we get when we try to enroll in a course\");\n      console.log(createdEnrollmentJson);\n      if (createdEnrollmentResponse.status === 201 ) {\n        this.setState({\n          enrollments:[...this.state.enrollments, createdEnrollmentJson.data]\n        })\n      }\n      console.log('HERE IS THE STATE OF ENROLLMENTS IN APP.JS');\n      console.log(this.state.enrollments)\n    } catch (error) {\n      console.error('error enrolling in course');\n      console.error(error)\n    }\n    \n  }\n\n  render () {\n  return (\n   <div className=\"App\">\n     {\n      this.state.loggedIn\n      ?\n      <React.Fragment>\n      <Header \n        logout={this.logout} \n        email={this.state.loggedInUserEmail} />\n      \n        <CourseContainer \n          userInfo={this.state}\n          createEnrollment={this.createEnrollment}\n          />\n\n        <EnrollmentContainer \n          userInfo={this.state}\n          enrollments={this.state.enrollments}\n          createEnrollment={this.createEnrollment}\n          getEnrollments={this.getEnrollments}\n          />\n\n      \n\n\n\n      </React.Fragment>\n      :\n      <LogInRegisterForm \n        login={this.login}\n        register={this.register}\n      />\n    }\n\n  </div>\n  );\n}\n}\n\n\n"]},"metadata":{},"sourceType":"module"}