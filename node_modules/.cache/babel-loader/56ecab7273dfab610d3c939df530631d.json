{"ast":null,"code":"var _jsxFileName = \"/Users/matthewwallace/cymatics/ronin-react/src/CourseContainer/index.js\";\nimport React, { Component } from 'react';\nimport CourseList from '../CourseList';\nimport CreateCourseForm from '../CreateCourseForm';\nimport EditCourseModal from '../EditCourseModal';\nimport EnrollmentContainer from '../EnrollmentContainer';\nexport default class courseContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getMilestones = async () => {\n      try {\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/milestones/\";\n        const milestonesResponse = await fetch(url, {\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const milestonesJson = await milestonesResponse.json();\n        console.log('this is milestones json', milestonesJson);\n        console.log(milestonesResponse);\n        this.setState({\n          milestones: milestonesJson.data\n        });\n      } catch (error) {\n        console.log('Error getting Milestones data');\n      }\n    };\n\n    this.createMilestone = async milestoneToAdd => {\n      console.log('THIS SHOULD BE PROPS FROM APP');\n      console.log(this.props.userInfo);\n      console.log(this.props.userInfo.loggedInUserId);\n      console.log('HERE IS THE milestone BEING ADDED');\n      console.log(milestoneToAdd);\n\n      try {\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/milestones/\" + courseId;\n        const createdMilestoneResponse = await fetch(url, {\n          method: 'POST',\n          credentials: 'include',\n          body: JSON.stringify(courseToAdd),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log(\"createdCourseResponse\", createdCourseResponse);\n        const createCourseJson = await createdCourseResponse.json();\n        console.log('here is what we got back after trying to add a course');\n        console.log(createCourseJson);\n\n        if (createdCourseResponse.status === 201) {\n          this.setState({\n            courses: [...this.state.courses, createCourseJson.data]\n          });\n        }\n      } catch (error) {\n        console.error(\"Error adding course\");\n        console.error(error);\n      }\n    };\n\n    this.getCourses = async () => {\n      try {\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/courses/\";\n        const coursesResponse = await fetch(url, {\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const coursesJson = await coursesResponse.json();\n        console.log('this is courses json', coursesJson);\n        console.log(coursesResponse);\n        this.setState({\n          courses: coursesJson.data\n        });\n      } catch (error) {\n        console.log('Error getting courses data');\n      }\n    };\n\n    this.deleteCourse = async idOfCourseToDelete => {\n      const url = process.env.REACT_APP_API_URL + \"/api/v1/courses/\" + idOfCourseToDelete;\n\n      try {\n        const deleteCourseResponse = await fetch(url, {\n          credentials: \"include\",\n          method: \"DELETE\"\n        });\n        console.log(\"deleteCoruseResponse\", deleteCourseResponse);\n        const deleteCourseJson = await deleteCourseResponse.json();\n        console.log(\"deleteCourseJson\", deleteCourseJson);\n\n        if (deleteCourseResponse.status == 200) {\n          this.setState({\n            courses: this.state.courses.filter(course => course.id != idOfCourseToDelete)\n          });\n        }\n      } catch (error) {\n        console.error('Error deleting course');\n        console.error(error);\n      }\n    };\n\n    this.createCourse = async courseToAdd => {\n      console.log('THIS SHOULD BE PROPS FROM APP');\n      console.log(this.props.userInfo);\n      console.log(this.props.userInfo.loggedInUserId);\n      console.log('HERE IS THE COURSE BEING ADDED');\n      console.log(courseToAdd);\n\n      try {\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/courses/create\";\n        const createdCourseResponse = await fetch(url, {\n          method: 'POST',\n          credentials: 'include',\n          body: JSON.stringify(courseToAdd),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log(\"createdCourseResponse\", createdCourseResponse);\n        const createCourseJson = await createdCourseResponse.json();\n        console.log('here is what we got back after trying to add a course');\n        console.log(createCourseJson);\n\n        if (createdCourseResponse.status === 201) {\n          this.setState({\n            courses: [...this.state.courses, createCourseJson.data]\n          });\n        }\n      } catch (error) {\n        console.error(\"Error adding course\");\n        console.error(error);\n      }\n    };\n\n    this.editCourse = idOfCourseToEdit => {\n      console.log('you are tyring to edit this course', idOfCourseToEdit);\n      this.setState({\n        idOfCourseToEdit: idOfCourseToEdit\n      });\n    };\n\n    this.updateCourse = async updatedCourseInfo => {\n      const url = process.env.REACT_APP_API_URL + '/api/v1/courses/' + this.state.idOfCourseToEdit;\n      console.log('THIS IS THE UPDATED COURSE INFO', updatedCourseInfo);\n\n      try {\n        const updatedCourseResponse = await fetch(url, {\n          credentials: 'include',\n          method: 'PUT',\n          body: JSON.stringify(updatedCourseInfo),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log(\"updatedCourseResponse\", updatedCourseResponse);\n        const updatedCourseJson = await updatedCourseResponse.json();\n        console.log(\"updatedCourseJson\", updatedCourseJson);\n        this.setState({\n          idOfCourseToEdit: -1\n        });\n        this.getCourses();\n      } catch (error) {\n        console.error(\"Error updating course info\");\n        console.error(error);\n      }\n    };\n\n    this.state = {\n      courses: [],\n      milestones: [],\n      idOfCourseToEdit: -1\n    };\n  }\n\n  componentDidMount() {\n    this.getCourses();\n    this.getMilestones();\n  }\n\n  render() {\n    console.log(\"here is the this.state in render() in course container\");\n    console.log(this.state);\n    console.log(this.props.userInfo);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 4\n      }\n    }, this.props.userInfo.loggedInUserIsAdmin === true && /*#__PURE__*/React.createElement(CreateCourseForm, {\n      userInfo: this.props.userInfo,\n      createCourse: this.createCourse,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(CourseList, {\n      courses: this.state.courses,\n      createMilestone: this.createMilestone,\n      userInfo: this.props.userInfo,\n      deleteCourse: this.deleteCourse,\n      editCourse: this.editCourse,\n      createEnrollment: this.props.createEnrollment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 6\n      }\n    }), this.state.idOfCourseToEdit !== -1 && /*#__PURE__*/React.createElement(EditCourseModal, {\n      courseToEdit: this.state.courses.find(course => course.id === this.state.idOfCourseToEdit),\n      updateCourse: this.updateCourse,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 6\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/matthewwallace/cymatics/ronin-react/src/CourseContainer/index.js"],"names":["React","Component","CourseList","CreateCourseForm","EditCourseModal","EnrollmentContainer","courseContainer","constructor","props","getMilestones","url","process","env","REACT_APP_API_URL","milestonesResponse","fetch","credentials","headers","milestonesJson","json","console","log","setState","milestones","data","error","createMilestone","milestoneToAdd","userInfo","loggedInUserId","courseId","createdMilestoneResponse","method","body","JSON","stringify","courseToAdd","createdCourseResponse","createCourseJson","status","courses","state","getCourses","coursesResponse","coursesJson","deleteCourse","idOfCourseToDelete","deleteCourseResponse","deleteCourseJson","filter","course","id","createCourse","editCourse","idOfCourseToEdit","updateCourse","updatedCourseInfo","updatedCourseResponse","updatedCourseJson","componentDidMount","render","loggedInUserIsAdmin","createEnrollment","find"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport CourseList from '../CourseList'\nimport CreateCourseForm from '../CreateCourseForm'\nimport EditCourseModal from '../EditCourseModal'\nimport EnrollmentContainer from '../EnrollmentContainer'\n\nexport default class courseContainer extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tcourses: [],\n\t\t\tmilestones:[],\n\t\t\tidOfCourseToEdit: -1\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getCourses()\n\t\tthis.getMilestones()\n\t}\n\n\n\tgetMilestones = async () => {\n\t\ttry {\n\t\t\tconst url = process.env.REACT_APP_API_URL + \"/api/v1/milestones/\" \n\t\t\tconst milestonesResponse = await fetch(url, {\n\t\t\t\t   \tcredentials: 'include',\n\t\t\t\t   \theaders: { \n\t\t\t\t   \t\t'Content-Type': 'application/json' \n\t\t\t\t   \t}\n\t\t\t\t})\t   \n\t\t\tconst milestonesJson = await milestonesResponse.json()\n\t\t\tconsole.log('this is milestones json' ,milestonesJson);\n\t\t\tconsole.log(milestonesResponse);\n\t\t\tthis.setState({\n\t\t\t\tmilestones: milestonesJson.data\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tconsole.log('Error getting Milestones data');\n\t\t}\n\t}\n\n\tcreateMilestone = async (milestoneToAdd) => {\n\t\tconsole.log('THIS SHOULD BE PROPS FROM APP');\n \t\tconsole.log(this.props.userInfo)\n \t\tconsole.log(this.props.userInfo.loggedInUserId);\n \t\tconsole.log('HERE IS THE milestone BEING ADDED');\n \t\tconsole.log(milestoneToAdd);\n\t\ttry {\n\t\t\tconst url = process.env.REACT_APP_API_URL + \"/api/v1/milestones/\" + courseId \n\t\t\tconst createdMilestoneResponse = await fetch(url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tcredentials: 'include',\n\t\t\t\tbody: JSON.stringify(courseToAdd),\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type':'application/json'\n\t\t\t\t}\n\t\t\t})\n\t\t\tconsole.log(\"createdCourseResponse\", createdCourseResponse);\n\t\t\tconst createCourseJson = await createdCourseResponse.json()\n\t\t\tconsole.log('here is what we got back after trying to add a course');\n\t\t\tconsole.log(createCourseJson);\n\t\t\tif (createdCourseResponse.status === 201 ){\n\t\t\t\tthis.setState({\n\t\t\t\t\tcourses:[...this.state.courses, createCourseJson.data]\n\t\t\t\t})\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error adding course\");\n\t\t\tconsole.error(error)\n\t\t}\n\n\t}\n\n\n\n\tgetCourses = async () => {\n\t\ttry {\n\t\t\tconst url = process.env.REACT_APP_API_URL + \"/api/v1/courses/\" \n\t\t\tconst coursesResponse = await fetch(url, {\n\t\t\t\t   \tcredentials: 'include',\n\t\t\t\t   \theaders: { \n\t\t\t\t   \t\t'Content-Type': 'application/json' \n\t\t\t\t   \t}\n\t\t\t\t})\t   \n\t\t\tconst coursesJson = await coursesResponse.json()\n\t\t\tconsole.log('this is courses json' ,coursesJson);\n\t\t\tconsole.log(coursesResponse);\n\t\t\tthis.setState({\n\t\t\t\tcourses: coursesJson.data\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tconsole.log('Error getting courses data');\n\t\t}\n\t}\n\n\tdeleteCourse = async (idOfCourseToDelete) => {\n\t\tconst url = process.env.REACT_APP_API_URL + \"/api/v1/courses/\" + idOfCourseToDelete\n\t\ttry {\n\t\t\tconst deleteCourseResponse = await fetch(url, {\n\t\t\t\tcredentials: \"include\",\n\t\t\t\tmethod: \"DELETE\"\n\t\t\t})\n\t\t\tconsole.log(\"deleteCoruseResponse\", deleteCourseResponse);\n\t\t\tconst deleteCourseJson = await deleteCourseResponse.json()\n\t\t\tconsole.log(\"deleteCourseJson\", deleteCourseJson);\n\t\t\tif (deleteCourseResponse.status == 200) {\n\t\t\t\tthis.setState({\n\t\t\t\tcourses: this.state.courses.filter(course => course.id != idOfCourseToDelete)\n\t\t\t\t})\n\t\t\t}\t\n\t\t} catch (error) {\n\t\t\tconsole.error('Error deleting course');\n\t\t\tconsole.error(error)\n\t\t}\n\t}\n\n\tcreateCourse = async (courseToAdd) => {\n\t\tconsole.log('THIS SHOULD BE PROPS FROM APP');\n \t\tconsole.log(this.props.userInfo)\n \t\tconsole.log(this.props.userInfo.loggedInUserId);\n \t\tconsole.log('HERE IS THE COURSE BEING ADDED');\n \t\tconsole.log(courseToAdd);\n\t\ttry {\n\t\t\tconst url = process.env.REACT_APP_API_URL + \"/api/v1/courses/create\" \n\t\t\tconst createdCourseResponse = await fetch(url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tcredentials: 'include',\n\t\t\t\tbody: JSON.stringify(courseToAdd),\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type':'application/json'\n\t\t\t\t}\n\t\t\t})\n\t\t\tconsole.log(\"createdCourseResponse\", createdCourseResponse);\n\n\t\t\tconst createCourseJson = await createdCourseResponse.json()\n\t\t\tconsole.log('here is what we got back after trying to add a course');\n\t\t\tconsole.log(createCourseJson);\n\t\t\tif (createdCourseResponse.status === 201 ){\n\t\t\t\tthis.setState({\n\t\t\t\t\tcourses:[...this.state.courses, createCourseJson.data]\n\t\t\t\t})\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error adding course\");\n\t\t\tconsole.error(error)\n\t\t}\n\n\t}\n\n\teditCourse = (idOfCourseToEdit) => {\n\t\tconsole.log('you are tyring to edit this course', idOfCourseToEdit);\n\t\tthis.setState({\n\t\t\tidOfCourseToEdit: idOfCourseToEdit\n\t\t})\n\t}\n\n\tupdateCourse = async (updatedCourseInfo) => {\n\t\tconst url = process.env.REACT_APP_API_URL + '/api/v1/courses/' + this.state.idOfCourseToEdit\n\t\tconsole.log('THIS IS THE UPDATED COURSE INFO', updatedCourseInfo);\n\t\ttry {\n\t\t\tconst updatedCourseResponse = await fetch(url, {\n\t\t\t\tcredentials:'include',\n\t\t\t\tmethod: 'PUT',\n\t\t\t\tbody:JSON.stringify(updatedCourseInfo),\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t})\n\t\t\tconsole.log(\"updatedCourseResponse\", updatedCourseResponse);\n\t\t\tconst updatedCourseJson = await updatedCourseResponse.json()\n\t\t\tconsole.log(\"updatedCourseJson\", updatedCourseJson);\n\t\t\tthis.setState({idOfCourseToEdit: - 1})\n\t\t\tthis.getCourses()\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error updating course info\");\n\t\t\tconsole.error(error)\n\t\t}\n\t}\n\t\n\trender() {\n\t\tconsole.log(\"here is the this.state in render() in course container\");\n\t\tconsole.log(this.state);\n\t\tconsole.log(this.props.userInfo);\n\t\treturn(\n\t\t\t<React.Fragment>\n\t\t\t\t\n\t\t\t\t{ this.props.userInfo.loggedInUserIsAdmin === true\n\t\t\t\t\t&&\n\t\t\t\t\t<CreateCourseForm \n\t\t\t\t\t\tuserInfo={this.props.userInfo}\n\t\t\t\t\t\tcreateCourse={this.createCourse}/>\n\t\t\t\t}\n\n\t\t\t\t\t<CourseList \n\t\t\t\t\t\tcourses={this.state.courses} \n\t\t\t\t\t\tcreateMilestone={this.createMilestone}\n\t\t\t\t\t\tuserInfo={this.props.userInfo}\n\t\t\t\t\t\tdeleteCourse={this.deleteCourse}\n\t\t\t\t\t\teditCourse={this.editCourse}\n\t\t\t\t\t\tcreateEnrollment={this.props.createEnrollment}\n\t\t\t\t\t/>\n\n\n\t\t\t\n\t\t\t\t{ this.state.idOfCourseToEdit !== -1 \n\t\t\t\t\t&& \n\t\t\t\t\t<EditCourseModal \n\t\t\t\t\t\tcourseToEdit={this.state.courses.find((course) => course.id === this.state.idOfCourseToEdit)}\n\t\t\t\t\t\tupdateCourse={this.updateCourse}\n\t\t\t\t\t\t/>}\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}